# Generated by Django 5.2.5 on 2025-09-09 18:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('interviews', '0018_add_enhanced_ai_evaluation_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecruiterEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_score', models.FloatField(blank=True, help_text='Clarté, fluidité, structure de la réponse', null=True, verbose_name='Score Communication (0-100)')),
                ('communication_feedback', models.TextField(blank=True, help_text="Ex: 'Réponse claire, mais manque de concision'", null=True, verbose_name='Commentaire Communication')),
                ('confidence_score', models.FloatField(blank=True, help_text="Ton affirmatif, peu d'hésitation", null=True, verbose_name='Score Confiance (0-100)')),
                ('confidence_feedback', models.TextField(blank=True, help_text="Ex: 'Ton confiant, mais quelques hésitations'", null=True, verbose_name='Commentaire Confiance')),
                ('relevance_score', models.FloatField(blank=True, help_text='Réponse alignée avec la question posée', null=True, verbose_name='Score Pertinence (0-100)')),
                ('relevance_feedback', models.TextField(blank=True, help_text="Ex: 'Réponse bien ciblée, couvre 80% du sujet'", null=True, verbose_name='Commentaire Pertinence')),
                ('overall_score', models.FloatField(blank=True, help_text='Score global calculé ou saisi par le recruteur', null=True, verbose_name='Score Global (0-100)')),
                ('overall_feedback', models.TextField(blank=True, help_text='Commentaire général du recruteur sur la réponse', null=True, verbose_name='Commentaire Global')),
                ('recommendation', models.CharField(blank=True, choices=[('excellent', 'Excellent candidat'), ('good', 'Bon candidat'), ('average', 'Candidat moyen'), ('below_average', 'En dessous de la moyenne'), ('poor', 'Candidat faible')], max_length=20, null=True, verbose_name='Recommandation')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('interview_answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_evaluation', to='interviews.interviewanswer', verbose_name="Réponse d'entretien")),
                ('recruiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Recruteur évaluateur')),
            ],
            options={
                'verbose_name': 'Évaluation Recruteur',
                'verbose_name_plural': 'Évaluations Recruteur',
                'ordering': ['-created_at'],
                'unique_together': {('interview_answer', 'recruiter')},
            },
        ),
    ]
