# Generated by Django 5.2.5 on 2025-09-16 08:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('interviews', '0027_alter_recruiterevaluation_recommendation'),
    ]

    operations = [
        migrations.CreateModel(
            name='AiEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transcription', models.TextField(blank=True, help_text='Texte transcrit de la vidéo via Whisper', null=True, verbose_name='Transcription')),
                ('transcription_language', models.CharField(blank=True, help_text='Langue détectée par Whisper (fr, en, etc.)', max_length=10, null=True, verbose_name='Langue détectée')),
                ('transcription_confidence', models.FloatField(blank=True, help_text='Score de confiance de la transcription (0-1)', null=True, verbose_name='Confiance transcription')),
                ('communication_score', models.FloatField(blank=True, help_text="Score de communication donné par l'IA (0-10)", null=True, verbose_name='Score Communication IA')),
                ('relevance_score', models.FloatField(blank=True, help_text="Score de pertinence donné par l'IA (0-10)", null=True, verbose_name='Score Pertinence IA')),
                ('confidence_score', models.FloatField(blank=True, help_text="Score de confiance donné par l'IA (0-10)", null=True, verbose_name='Score Confiance IA')),
                ('overall_ai_score', models.FloatField(blank=True, help_text="Score global calculé par l'IA (0-10)", null=True, verbose_name='Score Global IA')),
                ('ai_feedback', models.TextField(blank=True, help_text="Commentaires détaillés générés par l'IA", null=True, verbose_name='Feedback IA')),
                ('strengths', models.TextField(blank=True, help_text="Points forts identifiés par l'IA", null=True, verbose_name='Points forts identifiés')),
                ('weaknesses', models.TextField(blank=True, help_text="Axes d'amélioration identifiés par l'IA", null=True, verbose_name='Points faibles identifiés')),
                ('ai_provider', models.CharField(choices=[('gemini', 'Google Gemini'), ('openai', 'OpenAI'), ('huggingface', 'Hugging Face'), ('local', 'Modèle Local')], help_text="Service IA utilisé pour l'évaluation", max_length=20, verbose_name='Fournisseur IA')),
                ('processing_time', models.FloatField(blank=True, help_text='Durée totale du traitement en secondes', null=True, verbose_name='Temps de traitement')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Terminée'), ('failed', 'Échec')], default='pending', max_length=20, verbose_name='Statut')),
                ('error_message', models.TextField(blank=True, help_text="Détails de l'erreur en cas d'échec", null=True, verbose_name="Message d'erreur")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de completion')),
                ('interview_answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_evaluation', to='interviews.interviewanswer', verbose_name="Réponse d'entretien")),
            ],
            options={
                'verbose_name': 'Évaluation IA',
                'verbose_name_plural': 'Évaluations IA',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='interviews__status_9e6dc3_idx'), models.Index(fields=['ai_provider', 'status'], name='interviews__ai_prov_7913db_idx')],
            },
        ),
    ]
